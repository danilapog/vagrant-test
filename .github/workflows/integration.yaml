run-name: Integration test ${{ github.event.repository.name }}

on:
  workflow_call:

env: 
  K8S_CONFIG: 'https://raw.githubusercontent.com/danilapog/vagrant-test/master/.github/kube-linter-config/kind-config.yaml'
  K8S_STORAGE_CLASS: 'standard'
  NFS_PERSISTANCE_SIZE: '4G'
  
jobs:
  spin-up:
    name: integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Get kind config
        run: wget ${K8S_CONFIG} 
        
      - uses: azure/setup-helm@v3
        id: setup-helm
        with:
          version: 'latest' # default is latest (stable)
          token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'
 
      - name: setup kind k8s
        id: setup-kind-k8s
        uses: helm/kind-action@v1.4.0
        with: 
          config: ./kind-config.yaml
          
      - name: Wait k8s workers
        timeout-minutes: 2
        run: | 
          for i in {1..20}; do
            echo "Get k8s workers status ${i}"
            STATUS=$(kubectl get nodes -o json | jq -r '.items[] | select ( .status.conditions[] | select( .type=="Ready" and .status=="False")) | .metadata.name')
            if [[ -z "${STATUS}"  ]]; then
              echo "K8s workers is ready. Continue..."
              k8s_ready='true'
              break
            else
              echo ${STATUS}
              sleep 5
            fi
          done
        shell: bash
          
      - name: Get nodes status 
        run: |
          kubectl get nodes
          kubectl get storageclass
          
      - name: Set-up dependency
        run: |
            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
            helm repo add nfs-server-provisioner https://kubernetes-sigs.github.io/nfs-ganesha-server-and-external-provisioner
            helm repo add onlyoffice https://download.onlyoffice.com/charts/stable
            helm repo update
            
            helm install nfs-server nfs-server-provisioner/nfs-server-provisioner \
                 --set persistence.enabled=true \
                 --set persistence.storageClass=${K8S_STORAGE_CLASS} \
                 --set persistence.size=${NFS_PERSISTANCE_SIZE}
            
            helm install rabbitmq bitnami/rabbitmq \
                 --set metrics.enabled=false
                 
            helm install redis bitnami/redis \
                 --set architecture=standalone \
                 --set metrics.enabled=false
                 
            helm install postgresql bitnami/postgresql \
                 --set auth.database=postgres \
                 --set primary.persistence.size=2G \
                 --set metrics.enabled=false
      
      - name: Get storageclasses again
        run: kubectl get storageclass
        
      - name: lint chart ${{ github.event.repository.name }}
        uses: ONLYOFFICE/ga-common/.github/workflows/helm-lint.yaml@master
        with: 
          ct_version: 3.8.0
          enable_yaml_lint: true
          enable_kube_lint: true
          
      - name: CT install test
        run: |
            ./ct install --charts .
        
        
      #- name: Get all pods
      #  run: |
      #       sleep 120
      #       kubectl get all
             
      #- name: Install K8s-Docs
      #  run: |
      #       helm install documentserver onlyoffice/docs
             
      #- name: Get Deployments status
      #  run: |
      #       sleep 120
      #       kubectl get all
          
