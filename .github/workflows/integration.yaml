run-name: Integration test ${{ github.event.repository.name }}

on:
  workflow_call:

env: 
  BASE_URL: 'https://raw.githubusercontent.com/danilapog/vagrant-test/master/.github'
  K8S_CONFIG: 'kube-linter-config/kind-config.yaml'
  INSTALL_SCRIPT: 'install-${{ github.repository.repo.name }}.sh'
  K8S_STORAGE_CLASS: 'standard'
  NFS_PERSISTANCE_SIZE: '4G'
  LINT_CONF: 'https://raw.githubusercontent.com/ONLYOFFICE/ga-common/master/.github/config/lintconf.yaml'
  KUBELINT_CONF: 'https://raw.githubusercontent.com/ONLYOFFICE/ga-common/master/.github/config/.kube-linter.yaml'
  CHART_SCHEMA: 'https://raw.githubusercontent.com/ONLYOFFICE/ga-common/master/.github/config/chart_schema.yaml'
  
jobs:
  spin-up:
    name: integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout chart
        uses: actions/checkout@v3
        
      - name: Get kind config
        run: wget ${BASE_URL}/${K8S_CONFIG} ${BASE_URL}/scripts/${INSTALL_SCRIPT}
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true
        
      - uses: azure/setup-helm@v3
        id: setup-helm
        with:
          version: 'latest'
          token: ${{ secrets.GITHUB_TOKEN }} 
 
      - name: setup kind k8s
        id: setup-kind-k8s
        uses: helm/kind-action@v1.4.0
        with: 
          config: ./kind-config.yaml
          
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0
        
      - name: Prepare unit tests environment
        run: |
           #sudo apt-get update -y
           #sudo apt-get install -y yamllint
           #pip install yamale
           #wget https://github.com/helm/chart-testing/releases/download/v3.3.0/chart-testing_3.3.0_linux_amd64.tar.gz
           wget ${LINT_CONF} ${KUBELINT_CONF} ${CHART_SCHEMA}
           mkdir -p /tmp/ct_tool
           #tar -xvzf chart-testing_3.3.0_linux_amd64.tar.gz -C /tmp/ct_tool ct
           #rm -rf ./chart-testing_3.3.0_linux_amd64.tar.gz
          
      - name: Start deploy
        run: | 
            set -euo pipefail 
            
            export ${K8S_STORAGE_CLASS}
            export ${NFS_PERSISTANCE_SIZE}
            sudo chmod +x ${INSTALL_SCRIPT}
            sudo bash ./${INSTALL_SCRIPT}            
        
      #- name: CT install test
      #  run: |
      #      set -euo pipefail 
      #      
      #      /tmp/ct_tool/ct install --charts .
      #  shell: bash
        
        
      #- name: Get all pods
      #  run: |
      #       sleep 120
      #       kubectl get all
             
      #- name: Install K8s-Docs
      #  run: |
      #       helm install documentserver onlyoffice/docs
             
      #- name: Get Deployments status
      #  run: |
      #       sleep 120
      #       kubectl get all
          
